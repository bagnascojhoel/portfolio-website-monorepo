plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.graalvm.buildtools.native' version '0.9.25'
}

group = 'br.com.bagnascojhoel'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'com.auth0:java-jwt:4.4.0'

    testImplementation 'org.skyscreamer:jsonassert:1.5.1'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'
    testImplementation 'org.mock-server:mockserver-spring-test-listener:5.15.0'
    testImplementation 'org.awaitility:awaitility:3.1.0'
}

java {
    sourceCompatibility = '17'
    manifest {
        attributes(
                "Implementation-Title": project.group + "." + project.name,
                "Implementation-Version": project.version
        )
    }
}

graalvmNative {
    binaries {
        configureEach {
            resources.autodetect()
        }

        main {
            imageName = "${project.name}-${project.version}"
        }
    }

    toolchainDetection = false
}

test {
    useJUnitPlatform()
}

tasks.named('build') {
    dependsOn clean
}

tasks.named("nativeCompile") {
    dependsOn tracingAgentTest
}

tasks.register("tracingAgentTest", Test) {
    group "verification"

    useJUnitPlatform()
    jvmArgs "-agentlib:native-image-agent=config-output-dir=src/main/resources/META-INF/native-image"
}

tasks.register("nativeCompileDocker", Exec) {
    group "build"
    dependsOn nativeCompile

    commandLine 'docker',
            'image',
            'build',
            '--build-arg',
            "ARTIFACT=${project.name}-${version}",
            '-t', "${project.name}:${version}",
            '-t', "${project.name}:latest",
            '.'
}